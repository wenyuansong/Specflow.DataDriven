// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Examples
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ExamplesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Examples.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Examples", "\tIn order to test and demo DataDriver functionalities", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Examples")))
            {
                Examples.ExamplesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("test data driven")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Examples")]
        public virtual void TestDataDriven()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test data driven", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "name",
                        "ryan"});
            table1.AddRow(new string[] {
                        "stringList",
                        "[\"5\",\"6\",\"7\",\"8\"]"});
            table1.AddRow(new string[] {
                        "boolList",
                        "[true,false]"});
            table1.AddRow(new string[] {
                        "intList",
                        "[5,6,7,8]"});
            table1.AddRow(new string[] {
                        "nest",
                        "{name:\"song\"}"});
            table1.AddRow(new string[] {
                        "nestList",
                        "[{name:\"song\"}, {name:\"song2\"}]"});
            table1.AddRow(new string[] {
                        "ignore",
                        "n/a"});
#line 5
 testRunner.When("fill in following data to \"TestObj\":", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "name",
                        "ryan"});
            table2.AddRow(new string[] {
                        "stringList",
                        "[\"5\",\"6\",\"7\",\"8\"]"});
            table2.AddRow(new string[] {
                        "boolList",
                        "[true,false]"});
            table2.AddRow(new string[] {
                        "intList",
                        "[5,6,7,8]"});
            table2.AddRow(new string[] {
                        "nest",
                        "{name:\"song\"}"});
            table2.AddRow(new string[] {
                        "nestList",
                        "[{name:\"song\"}, {name:\"song2\"}]"});
            table2.AddRow(new string[] {
                        "ignore",
                        "n/a"});
            table2.AddRow(new string[] {
                        "nest",
                        "{name:n/a}"});
            table2.AddRow(new string[] {
                        "stringList.Contain()",
                        "5"});
            table2.AddRow(new string[] {
                        "nestList.Count()",
                        "2"});
            table2.AddRow(new string[] {
                        "nestList.Contain()",
                        "{name:\"song\"}"});
#line 14
 testRunner.Then("verify the following data in \"TestObj\" should pass:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "name",
                        "ryan1"});
#line 27
     testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "invalid",
                        "ryan"});
#line 30
  testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "stringList",
                        "[\"5\",\"6\",\"7\"]"});
#line 33
  testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "stringList",
                        "[\"5\",\"6\",\"7\"]"});
#line 36
  testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "boolList",
                        "[true,true]"});
#line 39
  testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "intList",
                        "[5,6,7,8,9]"});
#line 42
  testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "nest",
                        "{name:\"song1\"}"});
#line 45
  testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "nestList",
                        "[{name:\"song\"}, {name:\"song\"}]"});
#line 48
  testRunner.Then("verify the following data in \"TestObj\" should fail:", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
